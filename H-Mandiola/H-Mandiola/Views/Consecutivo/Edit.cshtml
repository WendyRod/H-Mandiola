@model H_Mandiola.Models.Consecutivo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<br />
@*<h2>Editar Consecutivos</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
                <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                    <div class="card card-signin my-5">

                        <div class="card-body">
                            <center>
                                <img src="../../Imagenes/H-icono.png" width="60" height="60" />
                            </center>
                            <br />

                            @*<div class="form-horizontal">*@
                            <h4 class="card-title text-center">Editar Consecutivos</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Codigo)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Consecutivo1, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Consecutivo1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Consecutivo1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PoseePrefijo, htmlAttributes: new { htmlAttributes = new { @class = "control-label" } })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PoseePrefijo, new { htmlAttributes = new { data_action = "toggleEnable", data_target = "[name='Posee Prefijo']" } })
                                        @Html.ValidationMessageFor(model => model.PoseePrefijo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Prefijo, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Prefijo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Prefijo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PoseeRango, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PoseeRango, new { htmlAttributes = new { data_action = "toggleEnable", data_target = "[name='Posee Rango']" } })
                                        @Html.ValidationMessageFor(model => model.PoseeRango, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Minimo, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Minimo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Minimo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Maximo, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Maximo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Maximo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar cambios" class="btn btn-primary" />
                                </div>
                            </div>
                            <br />
                        </div>
                        </div>
</div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
