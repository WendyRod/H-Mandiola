@model H_Mandiola.Models.Usuario

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <style>
        :root {
            --input-padding-x: 1.5rem;
            --input-padding-y: .75rem;
        }

        body {
            background-image: url("https://www.thephoenician.com/wp-content/uploads/sites/8/2013/02/poolatdusk.jpg");
            background-repeat: no-repeat;
            background-size: cover;
        }

        .card-signin {
            border: 0;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
        }

            .card-signin .card-title {
                margin-bottom: 2rem;
                font-weight: 300;
                font-size: 1.5rem;
            }

            .card-signin .card-body {
                padding: 2rem;
            }

        .form-signin {
            width: 100%;
        }

            .form-signin .btn {
                font-size: 80%;
                border-radius: 5rem;
                letter-spacing: .1rem;
                font-weight: bold;
                padding: 1rem;
                transition: all 0.2s;
            }

        .form-label-group {
            position: relative;
            margin-bottom: 1rem;
        }

            .form-label-group input {
                height: auto;
                border-radius: 2rem;
            }

            .form-label-group > input,
            .form-label-group > label {
                padding: var(--input-padding-y) var(--input-padding-x);
            }

            .form-label-group > label {
                position: absolute;
                top: 0;
                left: 0;
                display: block;
                width: 100%;
                margin-bottom: 0;
                /* Override default `<label>` margin */
                line-height: 1.5;
                color: #495057;
                border: 1px solid transparent;
                border-radius: .25rem;
                transition: all .1s ease-in-out;
            }

            .form-label-group input::-webkit-input-placeholder {
                color: transparent;
            }

            .form-label-group input:-ms-input-placeholder {
                color: transparent;
            }

            .form-label-group input::-ms-input-placeholder {
                color: transparent;
            }

            .form-label-group input::-moz-placeholder {
                color: transparent;
            }

            .form-label-group input::placeholder {
                color: transparent;
            }

            .form-label-group input:not(:placeholder-shown) {
                padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
                padding-bottom: calc(var(--input-padding-y) / 3);
            }

                .form-label-group input:not(:placeholder-shown) ~ label {
                    padding-top: calc(var(--input-padding-y) / 3);
                    padding-bottom: calc(var(--input-padding-y) / 3);
                    font-size: 12px;
                    color: #777;
                }

        .btn-google {
            color: white;
            background-color: #ea4335;
        }

        .btn-facebook {
            color: white;
            background-color: #3b5998;
        }
    </style>
</head>

<body>

    @*FACEBOOK*@
    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/es_LA/sdk.js#xfbml=1&version=v4.0&appId=500521697439684&autoLogAppEvents=1"></script>
    @*FIN*@

    @*GOOGLE*@
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <meta name="google-signin-client_id" content="568085675674-2hpag6sutceap4qcrvhllsb6qtfbu15c.apps.googleusercontent.com">
    @*FIN*@

    <div class="container">
        @using (Html.BeginForm("LoginMethod", "Usuario", FormMethod.Post))
        {
            <div class="row">
                <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                    <div class="card card-signin my-5">

                        <div class="card-body">
                            <center>
                                <img src="../Imagenes/H-icono.png" width="60" height="60" />
                            </center>
                            <br />
                            <h5 class="card-title text-center">Iniciar sesión</h5>
                            <form class="form-signin" id="loginF">
                                <div class="form-group">
                                    <label for="UsernameLabel" runat="server">Nombre de usuario:</label>
                                    <br />
                                    <br />
                                    @Html.EditorFor(model => model.Usuario1, new { htmlAttributes = new { @class = "form-control", type = "text", required = "required" } })
                                    <br />
                                    @Html.ValidationMessageFor(model => model.Usuario1)
                                </div>
                                <div class="form-group">
                                    <label for="PasswordLabel" runat="server">Contraseña:</label>
                                    <br />
                                    <br />
                                    @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control", type = "Password", required = "required" } })
                                    <br />
                                    @Html.ValidationMessageFor(model => model.Clave)
                                </div>

                                <div class="custom-control custom-checkbox mb-3" />
                                <input type="checkbox" class="custom-control-input" id="customCheck1" />
                                <label class="custom-control-label" for="customCheck1">Recordar contraseña</label>
                            </form>
                        </div>

                        <input id="LoginButton" class="btn btn-primary btn-block text-uppercase" type="submit" value="Aceptar" onclick="Login()" />

                        <input id="LoginRegisterButton" class="btn btn-link" type="submit" value="¿No posee una cuenta?" onclick="LoginRegister()" />

                        <div class="fb-login-button" data-width="" data-size="medium" data-button-type="login_with" data-auto-logout-link="false" data-use-continue-as="true"></div>
                        <div class="g-signin2 text-center" id="customBtn" data-width="205" data-height="35" data-longtitle="true" data-onsuccess="onSignIn"></div>

                    </div>
                </div>
            </div>
        }
    </div>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @{
        if (TempData["msg"] != null)
        {
            <script type="text/javascript">
                alert("@TempData["msg"]");
            </script>
        }
    }
</body>
</html>
<script src="~/Scripts/JQuery/UserJQuery.js"></script>


@*GOOGLE*@
<script>
    var googleUser = {};
    var startApp = function () {
        gapi.load('auth2', function () {
            // Retrieve the singleton for the GoogleAuth library and set up the client.
            auth2 = gapi.auth2.init({
                client_id: '568085675674-2hpag6sutceap4qcrvhllsb6qtfbu15c.apps.googleusercontent.com',
                cookiepolicy: 'single_host_origin',
                // Request scopes in addition to 'profile' and 'email'
                //scope: 'additional_scope'
            });
            attachSignin(document.getElementById('customBtn'));
        });
    };

    function attachSignin(element) {
        var Nombre = "";
        var Email = "";
        console.log(element.id);
        auth2.attachClickHandler(element, {},
            function (googleUser) {
                var profile = googleUser.getBasicProfile();

                Nombre = profile.getName();
                Email = profile.getEmail();
                // googleUser.getBasicProfile().getName();

                $.ajax({
                    type: "POST",
                    url: "/Usuario/Login", // the method we are calling
                    data: { nombre: Nombre, email: Email },
                    dataType: "json",
                    success: function (result) {
                        if (result == "ok") {

                            window.location.href = "/Cliente/Inicio";


                        }
                    }
                })




            }, function (error) {
                alert(JSON.stringify(error, undefined, 2));
            });
    }

</script>



@*FACEBOOK*@

<script type="text/javascript">
    window.fbAsyncInit = function () {
        FB.init({
            appId: '500521697439684',
            status: true, // check login status
            cookie: true, // enable cookies to allow the server to access the session
            xfbml: true, // parse XFBML
            oauth: true // enable OAuth 2.0
        });
    };
    (function () {
        var e = document.createElement('script'); e.async = true;
        e.src = document.location.protocol +
            '//connect.facebook.net/en_US/all.js';
        document.getElementById('fb-root').appendChild(e);
    }());

    function loginByFacebook() {
        FB.login(function (response) {
            if (response.authResponse) {
                FacebookLoggedIn(response);
            } else {
                console.log('User cancelled login or did not fully authorize.');
            }
        }, { scope: 'email' });
    }

    function FacebookLoggedIn(response) {
        var loc = '/Cliente/Inicio';
        if (loc.indexOf('?') > -1)
            window.location = loc + '&authprv=facebook&access_token=' + response.authResponse.accessToken;
        else
            window.location = loc + '?authprv=facebook&access_token=' + response.authResponse.accessToken;
    }
</script>